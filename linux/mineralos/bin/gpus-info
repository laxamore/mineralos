#!/bin/sh

clear

AMD_DRIVER_VERSION=$(pacman -Qi opencl-amd | grep Version | cut -d':' -f 2 | awk '{ sub(/^[ \t]+/, ""); print }')
NVIDIA_DRIVER_VERSION=$(pacman -Qi nvidia | grep Version | cut -d':' -f 2 | awk '{ sub(/^[ \t]+/, ""); print }')

GPUS_VENDOR=()
GPUS_NAME=()
GPUS_MEMORYS=()
GPUS_PCIE_ID=()

readarray -t lshwData < <(lshw -quiet -C display -json | jq -c '.[]')
clinfoData=$(clinfo)
nvidiaSMINameData=$(nvidia-smi --query-gpu=name --format=csv)
nvidiaSMIMemoryData=$(nvidia-smi --query-gpu=memory.total --format=csv)

AMD_INDEX=0
NVIDIA_INDEX=0

function amd() {
    GPUS_VENDOR+=("AMD")
    GPUS_NAME+=("$(printf "$clinfoData" | grep "Board Name (AMD)" | tr -s ' ' | awk -v idx=$1 '{
        if (idx == NR) {
            print substr($0, index($0, $5))
        }
    }')")
    GPUS_MEMORYS+=("$(dmesg | grep VRAM | grep used | cut -d'(' -f 2 | cut -d' ' -f 1 | awk -v idx=$1 '{
        if (idx == NR) {
            print
        }
    }')")
}

function nvidia() {
    GPUS_VENDOR+=("NVIDIA")
    GPUS_NAME+=("$(printf "$nvidiaSMINameData" | awk -v idx=$1 '{
        if (NR==(idx+1)) {
            print
        }
    }')")
    GPUS_MEMORYS+=("$(printf "$nvidiaSMIMemoryData" | awk -v idx=$1 '{
        if (NR==(idx+1)) {
            print
        }
    }')")
}

if [ -z "$1" ]; then
	echo =============================================================
	printf "NVIDIA: %s\tAMD: %s\n\n" "$NVIDIA_DRIVER_VERSION" "$AMD_DRIVER_VERSION"
fi

for ((i=0; i < ${#lshwData[@]}; i++)) do
    VENDOR=$(echo ${lshwData[$i]} | jq '.vendor' | awk '{
	if ($0 == "\"NVIDIA\"") {
	    print "nvidia"
	}
	else if ($0 == "\"NVIDIA Corporation\"") {
	    print "nvidia"
	}
	else if ($0 == "\"Advanced Micro Devices, Inc. [AMD/ATI]\"") {
	    print "amd"
	}
    }')

    case $VENDOR in
	amd)
	    AMD_INDEX=$((AMD_INDEX + 1))
	    amd $AMD_INDEX
	    if [ -z "$1" ]; then
		printf "GPU Vendor:\t%s\nGPU Name:\t%s\nMemory Size:\t%s\n\n" "${GPUS_VENDOR[$i]}" "${GPUS_NAME[$i]}" "${GPUS_MEMORYS[$i]}"
	    fi
	    ;;
	nvidia)
	    NVIDIA_INDEX=$((NVIDIA_INDEX + 1))
	    nvidia $NVIDIA_INDEX
	    if [ -z "$1" ]; then
		printf "GPU Vendor:\t%s\nGPU Name:\t%s\nMemory Size:\t%s\n\n" "${GPUS_VENDOR[$i]}" "${GPUS_NAME[$i]}" "${GPUS_MEMORYS[$i]}"
	    fi
	    ;;
    esac
done

if [ -z "$1" ]; then
	echo =============================================================
fi

key="$1"
case $key in
	-j|--json)
		echo "[" 
		for ((i=0; i < ${#GPUS_VENDOR[@]}; i++)) {
		    printf "\t{\n\t\t\"gpu_vendor\":\"%s\",\n\t\t\"gpu_name\":\"%s\",\n\t\t\"memory_size\":\"%s\"\n\t}" "${GPUS_VENDOR[$i]}" "${GPUS_NAME[$i]}" "${GPUS_MEMORYS[$i]}" 

		    if (($i != (${#GPUS_VENDOR[@]} - 1))); then
			echo "," 
		    else
			echo 
		    fi
		}
		printf "]"
	;;
esac


